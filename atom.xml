<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tsim</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tsim.xyz/"/>
  <updated>2018-05-22T03:04:37.776Z</updated>
  <id>http://tsim.xyz/</id>
  
  <author>
    <name>Tsim</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从零开始搭建Github Page -- 源码备份&amp;双语网站</title>
    <link href="http://tsim.xyz/2018/05/21/second-post-for-hexo/"/>
    <id>http://tsim.xyz/2018/05/21/second-post-for-hexo/</id>
    <published>2018-05-21T21:44:47.000Z</published>
    <updated>2018-05-22T03:04:37.776Z</updated>
    
    <content type="html"><![CDATA[<p>在初步架设了个人Github page后，为了方便多端同步工作，可以将源码通过Github进行备份；其次，为了适应海外工作，架设双语网站。<br><a id="more"></a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在成功部署网页后，Github上只有生成后的文件，并没有网站的源文件。因此无法异地同步工作，鉴于我目前mac和window同时使用，因此有必要使用Github备份源码。其次，考虑到目前人在北美，也有双语网站的需求。</p><h1 id="源码备份"><a href="#源码备份" class="headerlink" title="源码备份"></a>源码备份</h1><p>备份源码最方便的方法是在<code>username.github.io</code> 仓库（repository）下新开一个分支（branch），并使用该branch备份网站源码。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先需要在原仓库下新建一个分支。<br>打开Terminal，定位到源文件所在的文件夹。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin https://github.com/&lt;username&gt;/&lt;username&gt;.github.io.git <span class="comment"># 添加远程仓库，注意最后的.git</span></span><br><span class="line">$ git branch <span class="comment"># 查看本地分支</span></span><br><span class="line">$ git branch -r <span class="comment">#</span></span><br><span class="line">$ git branch <span class="built_in">source</span> <span class="comment">#</span></span><br><span class="line">$ git checkout <span class="built_in">source</span> <span class="comment">#</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">$ git checkout -b <span class="built_in">source</span></span><br></pre></td></tr></table></figure><p>然后打开Github将repository的默认branch设为source。</p><h3 id="网站主题"><a href="#网站主题" class="headerlink" title="网站主题"></a>网站主题</h3><p>Github上有相当多的主题可供我们使用，比价广泛使用的是Next，本网站也是用的Next。<br>载入主题只需要在<code>/theme</code>文件夹内使用<code>git clone</code>命令即可。</p><p>相关的主题可以在<a href="https://hexo.io/themes/index.html" target="_blank" rel="noopener">Hexo themes</a>中获取。</p><p>然后为了能同步主题配置，需要把<code>/theme/next</code>文件夹下 <strong>.git</strong>文件删掉。</p><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add . <span class="comment"># 添加所有文件</span></span><br><span class="line">$ git commit -m <span class="string">'new commit'</span> <span class="comment"># commit</span></span><br><span class="line">$ git push origin <span class="built_in">source</span> <span class="comment"># 将修改推至云</span></span><br></pre></td></tr></table></figure><h2 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin <span class="built_in">source</span> <span class="comment"># 同步文件</span></span><br></pre></td></tr></table></figure><p>为了实现远程同步，每次本地修改内容前，都需要将修改pull到本地。完成修改后，都需要将修改push至Giuhub。</p><h1 id="网站双语"><a href="#网站双语" class="headerlink" title="网站双语"></a>网站双语</h1><p>Hexo本身具有在主题配置文件<code>/config.yml</code>修改网站语言的功能，但该功能不能实现两种语言在网站上动态切换。但是我们可以利用该特性实现我们所需要的效果。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>双语网站的实现，实际上是在网页内部署了另一个完整的网站，再将其语言设置为英文。</p><ol><li>首先，我们在根目录<code>/</code>下新建文件夹<code>/en</code>，作为英文网站的根目录。</li><li>第二步，在<code>/en</code>文件夹下初始化网站，或将原文件复制一遍（注意删除 <strong>.git</strong> ）。</li><li>修改<code>/en</code>文件夹下的配置文件。</li></ol><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><h4 id="中文页面"><a href="#中文页面" class="headerlink" title="中文页面"></a>中文页面</h4><p>中文网站中，一共有3处需要修改。</p><ol><li><p>站点配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># site</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br></pre></td></tr></table></figure></li><li><p>主题配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Menu settings</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">    commonweal:</span> <span class="string">/en</span></span><br></pre></td></tr></table></figure></li><li><p>主题目录下的语言文件<code>/themes/next/language/zh-Hans.yml</code></p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">    commonweal:</span> <span class="string">EN</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="英文网站"><a href="#英文网站" class="headerlink" title="英文网站"></a>英文网站</h4><p>英文网站中，同样有3处需要修改。</p><ol><li><p>站点配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># site</span></span><br><span class="line"><span class="string">language</span> <span class="string">:</span> <span class="string">en</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/en/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">../public/en</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">lang/:title.md</span></span><br></pre></td></tr></table></figure></li><li><p>主题配置文件</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">    commonweal:</span> <span class="string">../</span></span><br></pre></td></tr></table></figure></li><li><p>语言文件（<code>/en/themes/languages/en.yml</code>)</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">    commonweal:</span> <span class="string">中文</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>由于/en在原网站生成的过程中不会自动生成，因此实际部署双语网站需要先分别在两个网站中执行生成命令，再统一部署。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在初步架设了个人Github page后，为了方便多端同步工作，可以将源码通过Github进行备份；其次，为了适应海外工作，架设双语网站。&lt;br&gt;
    
    </summary>
    
    
      <category term="Web" scheme="http://tsim.xyz/tags/Web/"/>
    
      <category term="Github Page" scheme="http://tsim.xyz/tags/Github-Page/"/>
    
  </entry>
  
  <entry>
    <title>从零开始搭建Github Page -- Hexo入门</title>
    <link href="http://tsim.xyz/2018/05/15/Steps-to-Github-page-Build-it-with-Hexo/"/>
    <id>http://tsim.xyz/2018/05/15/Steps-to-Github-page-Build-it-with-Hexo/</id>
    <published>2018-05-15T16:54:51.000Z</published>
    <updated>2018-05-22T03:04:32.559Z</updated>
    
    <content type="html"><![CDATA[<p>从零开始，使用Hexo搭建个人Github page.<br><a id="more"></a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>从零开始一个博客，只能从Google开始。网上能轻易搜到的教程不少，但用的平台无非几个，CSDN, 简书，知乎专栏，Github，Wordpress。对于我而言，前面的三个都不是我的选择，因为他们都没办法自己管理数据，所以只能选择Github page或者Wordpress。本来wordpress已经几乎搭建好了，但是域名转接要花钱，觉得暂时没必要，故而选择Github。Github自由一点，可以随意发挥，只是又一次开始了无穷的折腾。</p><p>首先，最重要的是，诸多的帖子都不一定能满足自己的需求或者达到它所描述的效果。关键还事在于不断的思考和分析，然后摸索出自己的路。  </p><p>整个过程参考过的帖子很多，这里放出来一部分比较重要的：<br><a href="https://wsgzao.github.io/post/hexo-guide/" target="_blank" rel="noopener">使用GitHub和Hexo搭建免费静态Blog</a><br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo document</a><br><a href="http://www.itfanr.cc/2017/10/27/add-search-function-to-hexo-blog/" target="_blank" rel="noopener">Hexo博客添加搜索功能</a><br><a href="https://chenyxmr.github.io/2016/08/04/hexo-bilingual/" target="_blank" rel="noopener">hexo实现中英双语博客教程</a>  </p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>本文针对<font color="#6e081d"><code>Mac</code></font>和<font color="#6e081d"><code>Win</code></font>，以及<font color="#6e081d"><code>Hexo 3.7</code></font>。</p><h4 id="About-Hexo"><a href="#About-Hexo" class="headerlink" title="About Hexo"></a>About Hexo</h4><p><a href="hexo.io">Hexo.io</a>:<br>Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析    文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h4 id="安装Git-Node-JS-Hexo"><a href="#安装Git-Node-JS-Hexo" class="headerlink" title="安装Git, Node.JS, Hexo"></a>安装Git, Node.JS, Hexo</h4><p><a href="https://github.com/" target="_blank" rel="noopener">Github</a>， <a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js</a> 按着官网步骤安装即可。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查是否安装成功</span></span><br><span class="line">$ npm -v <span class="comment"># 5.6.0</span></span><br><span class="line">$ node -v <span class="comment"># v8.11.1</span></span><br><span class="line">$ git --version <span class="comment"># git version 2.16.3</span></span><br></pre></td></tr></table></figure><h5 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h5><p>首先是安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Hexo</span></span><br><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>初始化网站有两种方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 在目标文件夹内初始化</span></span><br><span class="line">$ hexo init <span class="comment"># 初始化网站</span></span><br><span class="line"><span class="comment"># 2. 新建文件夹初始化</span></span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> folder</span><br><span class="line">$ npm install </span><br><span class="line"><span class="comment"># 没有任何错误提示的话，就是成功了</span></span><br></pre></td></tr></table></figure><p>完成之后安装插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure><p>至此初步的安装就算结束了。</p><h6 id="本地查看"><a href="#本地查看" class="headerlink" title="本地查看"></a>本地查看</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>到<a href="localhost:4000" target="_blank" rel="noopener">本地</a>查看效果即可。</p><h6 id="Hexo基本操作"><a href="#Hexo基本操作" class="headerlink" title="Hexo基本操作"></a>Hexo基本操作</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">'post_name'</span> <span class="comment"># 新建post页面 (new)</span></span><br><span class="line">$ hexo new page <span class="string">"page_name"</span> <span class="comment"># 新建网络页面 (new page)</span></span><br><span class="line">$ hexo g <span class="comment"># 生成网页 (generate)</span></span><br><span class="line">$ hexo s <span class="comment"># 启动服务器 (server)</span></span><br><span class="line">$ hexo d <span class="comment"># 部署网站 (deploy)</span></span><br><span class="line">$ hexo clean <span class="comment"># 清除缓存文件</span></span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>每个账号能提供一个免费的域名给我们建立Github page，username.github.io。我们可以直接使用这个域名，也可以使用自己购买的域名。</p><p>使用Github page我们需要用username.github.io作为名字新建一个repository，新建完成后使用默认配置即可。</p><p>为了正常的部署网站，还需要配置SSH和Github仓库。<br>具体参考<a href="https://zhuanlan.zhihu.com/p/32957389" target="_blank" rel="noopener">技术小白搭建个人博客 github+hexo</a>中的配置部分。</p><h3 id="Hexo-1"><a href="#Hexo-1" class="headerlink" title="Hexo"></a>Hexo</h3><p>为了hexo的部署能完成，还需要在<code>./_config.yml</code>文件里进行配置。</p><h5 id="配置文件：-config-yml"><a href="#配置文件：-config-yml" class="headerlink" title="配置文件： _config.yml"></a>配置文件： _config.yml</h5><p>在配置之前，首先是要了解Hexo的配置文件。配置文件一般有两种，中文叫<code>站点配置文件</code>和<code>主题配置文件</code>，分别在<code>./</code>和<code>./themes/themes_name/</code>下。<br>站点配置文件一般用于设置网站的基本信息，譬如<strong>网站名</strong>， <strong>描述</strong>，<strong>网址</strong>，<strong>主题</strong>，<strong>生成路径</strong>等，而主题配置文件一般用于设置网站的结构和功能，譬如<strong>页面</strong>， *<em>主题</em>模版*等。</p><p>部署网页的配置在站点配置文件之下，按如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/&lt;User_name&gt;/&lt;User_name&gt;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>需要特别注意的是，repo一行最后的<strong><code>.git</code></strong>。</p><h2 id="网页部署"><a href="#网页部署" class="headerlink" title="网页部署"></a>网页部署</h2><p>在网页源文件夹下打开命令行，执行以下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo  clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>然后直接在浏览器中打开<a href="username.github.io">username.github.io</a>，观看网页部署的效果。一般每次部署都要等几分钟更新。</p><h2 id="个人域名"><a href="#个人域名" class="headerlink" title="个人域名"></a>个人域名</h2><p>如果有需要使用个人域名，在购买了自己的域名后需要对DNS 服务进行配置。<br>由于我在<a href="https://www.namecheap.com/" target="_blank" rel="noopener">namecheap</a>上买的域名，以下配置都以<strong>namecheap</strong>为例。<br>打开<strong>Dashboard</strong>之后，进入<strong>AdvanceDNS</strong>设置，删除所有默认的Host record。添加3条新的Record如下：</p><table><thead><tr><th>Type</th><th>Host</th><th>Value</th><th>TTL</th></tr></thead><tbody><tr><td>A Record</td><td>@</td><td>192.30.252.153</td><td>Automatic</td></tr><tr><td>A Record</td><td>@</td><td>192.30.252.153</td><td>Automatic</td></tr><tr><td>CNAME</td><td>www</td><td>username.github.io</td><td>Automatic</td></tr></tbody></table><p>其次，在<code>./source</code>文件下新建<code>CNAME</code>文件，内容如下，注意文件无后缀。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourdomain.address</span><br></pre></td></tr></table></figure><p>保存，重新部署网页即可。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>部署网页的内容在以上应该都覆盖到了，接下来的的文章依次是</p><ol><li>Github备份网页源码以及双语网页设置</li><li>网站页面、内容、功能的添加</li><li>…</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从零开始，使用Hexo搭建个人Github page.&lt;br&gt;
    
    </summary>
    
    
      <category term="Web" scheme="http://tsim.xyz/tags/Web/"/>
    
      <category term="Github Page" scheme="http://tsim.xyz/tags/Github-Page/"/>
    
  </entry>
  
  <entry>
    <title>About this site.</title>
    <link href="http://tsim.xyz/2018/05/13/first-note/"/>
    <id>http://tsim.xyz/2018/05/13/first-note/</id>
    <published>2018-05-13T04:28:47.000Z</published>
    <updated>2018-05-21T04:07:53.939Z</updated>
    
    <content type="html"><![CDATA[<p>My first post.<br><a id="more"></a><br>想开这个Blog估计有两三年了，一直没有走出实际的一步。终于在研一结束后的第二天，用hexo在github上线最简陋的模板。折腾了一圈，准备好的域名 <a href="http://tsim.xyz">tsim.xyz</a> 暂时没能正常用上，总是什么都显示不出来。  </p><p>开blog的初衷,是需要一个地方把一直以来各种地方用到的，学到的知识整理归纳，方便自己以后再用。用笔记本，抑或Markdown，一换电脑总会出现各种找不到文件的情况，而且大多数的非电子文档也不方便搜索，复用起来效率低下。这几年重重复复刷了好多遍基础的知识，譬如Pandas, plt, scrapy之类的，感觉最终我也只是记住了个框架，各种细枝末节事后忘得一干二净，希望通过这网站能让我记录下来每次的折腾。</p><p>另外，有个地方偶尔说说杂事也是极好的。</p><p>2018.5.13<br>Greenbelt.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My first post.&lt;br&gt;
    
    </summary>
    
    
      <category term="Something" scheme="http://tsim.xyz/tags/Something/"/>
    
  </entry>
  
</feed>
