<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Steps to Github page-Build it with Hexo]]></title>
    <url>%2F2018%2F05%2F15%2FSteps-to-Github-page-Build-it-with-Hexo%2F</url>
    <content type="text"><![CDATA[从零开始，搭建Github page. 前言从零开始一个博客，只能从Google开始。网上能轻易搜到的教程不少，但用的平台无非几个，CSDN, 简书，知乎专栏，Github，Wordpress。对于我而言，前面的三个都不是我的选择，因为他们都没办法自己管理数据，所以只能选择Github page或者Wordpress。本来wordpress已经几乎搭建好了，但是域名转接要花钱，觉得暂时没必要，故而选择Github。Github自由一点，可以随意发挥，只是又一次开始了无穷的折腾。 首先，最重要的是，诸多的帖子都不一定能满足自己的需求或者达到它所描述的效果。关键还事在于不断的思考和分析，然后摸索出自己的路。 整个过程参考过的帖子很多，这里放出来一部分比较重要的：使用GitHub和Hexo搭建免费静态BlogHexo documentHexo博客添加搜索功能hexo实现中英双语博客教程 准备工作本文针对Mac和Win，以及Hexo 3.7。 About HexoHexo.io:Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析 文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装Git, Node.JS, HexoGithub， Node.js 按着官网步骤安装即可。 1234# 检查是否安装成功$ npm -v # 5.6.0$ node -v # v8.11.1$ git --version # git version 2.16.3 Hexo首先是安装。 12# 安装Hexo$ npm install -g hexo-cli 初始化网站有两种方法。 12345678# 1. 在目标文件夹内初始化$ hexo init # 初始化网站# 2. 新建文件夹初始化$ hexo init &lt;folder&gt;$ cd folder$ npm install # 没有任何错误提示的话，就是成功了 完成之后安装插件。 12345678910111213npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked@0.2 --savenpm install hexo-renderer-stylus@0.2 --savenpm install hexo-generator-feed@1 --savenpm install hexo-generator-sitemap@1 --save 至此初步的安装就算结束了。 本地查看1$ hexo server 到本地查看效果即可。 Hexo基本操作123456$ hexo n 'post_name' # 新建post页面 (new)$ hexo new page "page_name" # 新建网络页面 (new page)$ hexo g # 生成网页 (generate)$ hexo s # 启动服务器 (server)$ hexo d # 部署网站 (deploy)$ hexo clean # 清除缓存文件 配置Github每个账号能提供一个免费的域名给我们建立Github page，username.github.io。我们可以直接使用这个域名，也可以使用自己购买的域名。 使用Github page我们需要用username.github.io作为名字新建一个repository，新建完成后使用默认配置即可。 为了正常的部署网站，还需要配置SSH和Github仓库。具体参考技术小白搭建个人博客 github+hexo中的配置部分。 Hexo为了hexo的部署能完成，还需要在./_config.yml文件里进行配置。 配置文件： _config.yml在配置之前，首先是要了解Hexo的配置文件。配置文件一般有两种，中文叫站点配置文件和主题配置文件，分别在./和./themes/themes_name/下。站点配置文件一般用于设置网站的基本信息，譬如网站名， 描述，网址，主题，生成路径等，而主题配置文件一般用于设置网站的结构和功能，譬如页面， *主题模版*等。 部署网页的配置在站点配置文件之下，按如下配置： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/&lt;User_name&gt;/&lt;User_name&gt;.github.io.git branch: master 需要特别注意的是，repo一行最后的.git。 网页部署在网页源文件夹下打开命令行，执行以下命令即可： 123456$ hexo clean$ hexo g$ hexo d# 或者$ hexo clean$ hexo d -g 然后直接在浏览器中打开username.github.io，观看网页部署的效果。一般每次部署都要等几分钟更新。 个人域名如果有需要使用个人域名，在购买了自己的域名后需要对DNS 服务进行配置。由于我在namecheap上买的域名，以下配置都以namecheap为例。打开Dashboard之后，进入AdvanceDNS设置，删除所有默认的Host record。添加3条新的Record如下： Type Host Value TTL A Record @ 192.30.252.153 Automatic A Record @ 192.30.252.153 Automatic CNAME www username.github.io Automatic 其次，在./source文件下新建CNAME文件，内容如下，注意文件无后缀。 1yourdomain.address 保存，重新部署网页即可。 最后部署网页的内容在以上应该都覆盖到了，接下来的的文章依次是 Github备份网页源码以及双语网页设置 网站页面、内容、功能的添加 …]]></content>
      <tags>
        <tag>Web</tag>
        <tag>Github Page</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[About this site.]]></title>
    <url>%2F2018%2F05%2F13%2Ffirst-note%2F</url>
    <content type="text"><![CDATA[My first post.想开这个Blog估计有两三年了，一直没有走出实际的一步。终于在研一结束后的第二天，用hexo在github上线最简陋的模板。折腾了一圈，准备好的域名 tsim.xyz 暂时没能正常用上，总是什么都显示不出来。 开blog的初衷,是需要一个地方把一直以来各种地方用到的，学到的知识整理归纳，方便自己以后再用。用笔记本，抑或Markdown，一换电脑总会出现各种找不到文件的情况，而且大多数的非电子文档也不方便搜索，复用起来效率低下。这几年重重复复刷了好多遍基础的知识，譬如Pandas, plt, scrapy之类的，感觉最终我也只是记住了个框架，各种细枝末节事后忘得一干二净，希望通过这网站能让我记录下来每次的折腾。 另外，有个地方偶尔说说杂事也是极好的。 2018.5.13Greenbelt.]]></content>
      <tags>
        <tag>Something</tag>
      </tags>
  </entry>
</search>
